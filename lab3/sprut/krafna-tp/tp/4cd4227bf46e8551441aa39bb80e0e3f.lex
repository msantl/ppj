KR_VOID 1 void
IDN 1 f
L_ZAGRADA 1 (
KR_INT 1 int
IDN 1 a
ZAREZ 1 ,
KR_CONST 1 const
KR_INT 1 int
IDN 1 b
ZAREZ 1 ,
KR_CHAR 1 char
IDN 1 c
L_UGL_ZAGRADA 1 [
D_UGL_ZAGRADA 1 ]
D_ZAGRADA 1 )
TOCKAZAREZ 1 ;
KR_INT 3 int
IDN 3 main
L_ZAGRADA 3 (
KR_VOID 3 void
D_ZAGRADA 3 )
L_VIT_ZAGRADA 3 {
KR_CHAR 4 char
IDN 4 a
L_UGL_ZAGRADA 4 [
BROJ 4 10
D_UGL_ZAGRADA 4 ]
TOCKAZAREZ 4 ;
IDN 5 f
L_ZAGRADA 5 (
BROJ 5 1
ZAREZ 5 ,
BROJ 5 2
ZAREZ 5 ,
IDN 5 a
D_ZAGRADA 5 )
TOCKAZAREZ 5 ;
KR_RETURN 6 return
BROJ 6 0
TOCKAZAREZ 6 ;
D_VIT_ZAGRADA 7 }
KR_VOID 9 void
IDN 9 f
L_ZAGRADA 9 (
KR_INT 9 int
IDN 9 d
ZAREZ 9 ,
KR_CONST 9 const
KR_INT 9 int
IDN 9 b
ZAREZ 9 ,
KR_CHAR 9 char
IDN 9 c
L_UGL_ZAGRADA 9 [
D_UGL_ZAGRADA 9 ]
D_ZAGRADA 9 )
L_VIT_ZAGRADA 9 {
IDN 10 a
OP_PRIDRUZI 10 =
IDN 10 b
PLUS 10 +
BROJ 10 1
TOCKAZAREZ 10 ;
IDN 11 a
OP_PRIDRUZI 11 =
IDN 11 a
OP_EQ 11 ==
BROJ 11 5
OP_PUTA 11 *
BROJ 11 4
OP_LTE 11 <=
BROJ 11 3
OP_GT 11 >
BROJ 11 2
PLUS 11 +
BROJ 11 1
OP_PUTA 11 *
L_ZAGRADA 11 (
KR_CHAR 11 char
D_ZAGRADA 11 )
BROJ 11 4
TOCKAZAREZ 11 ;
KR_RETURN 12 return
TOCKAZAREZ 12 ;
D_VIT_ZAGRADA 13 }
