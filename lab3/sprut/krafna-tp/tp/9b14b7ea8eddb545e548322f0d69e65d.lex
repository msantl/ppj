KR_VOID 1 void
IDN 1 foo
L_ZAGRADA 1 (
KR_INT 1 int
IDN 1 x
ZAREZ 1 ,
KR_INT 1 int
IDN 1 c
ZAREZ 1 ,
KR_CHAR 1 char
IDN 1 h
D_ZAGRADA 1 )
TOCKAZAREZ 1 ;
KR_INT 3 int
IDN 3 f
L_ZAGRADA 3 (
KR_VOID 3 void
D_ZAGRADA 3 )
L_VIT_ZAGRADA 4 {
KR_RETURN 5 return
BROJ 5 0
TOCKAZAREZ 5 ;
D_VIT_ZAGRADA 6 }
KR_INT 8 int
IDN 8 x
OP_PRIDRUZI 8 =
BROJ 8 3
TOCKAZAREZ 8 ;
KR_INT 10 int
IDN 10 jabuka
TOCKAZAREZ 10 ;
KR_INT 14 int
IDN 14 main
L_ZAGRADA 14 (
KR_VOID 14 void
D_ZAGRADA 14 )
L_VIT_ZAGRADA 15 {
KR_INT 16 int
IDN 16 a
OP_PRIDRUZI 16 =
BROJ 16 5
TOCKAZAREZ 16 ;
KR_CONST 17 const
KR_CHAR 17 char
IDN 17 c
OP_PRIDRUZI 17 =
ZNAK 17 'i'
TOCKAZAREZ 17 ;
KR_INT 18 int
IDN 18 niz
L_UGL_ZAGRADA 18 [
BROJ 18 3
D_UGL_ZAGRADA 18 ]
TOCKAZAREZ 18 ;
KR_VOID 19 void
IDN 19 foo
L_ZAGRADA 19 (
KR_INT 19 int
IDN 19 x
ZAREZ 19 ,
KR_INT 19 int
IDN 19 c
ZAREZ 19 ,
KR_CHAR 19 char
IDN 19 h
D_ZAGRADA 19 )
TOCKAZAREZ 19 ;
KR_INT 20 int
IDN 20 x
OP_PRIDRUZI 20 =
BROJ 20 5
TOCKAZAREZ 20 ;
KR_INT 21 int
IDN 21 y
OP_PRIDRUZI 21 =
IDN 21 x
PLUS 21 +
BROJ 21 1
TOCKAZAREZ 21 ;
IDN 22 a
OP_PRIDRUZI 22 =
IDN 22 a
PLUS 22 +
BROJ 22 3
TOCKAZAREZ 22 ;
KR_IF 24 if
L_ZAGRADA 24 (
IDN 24 a
OP_GT 24 >
BROJ 24 2
D_ZAGRADA 24 )
L_VIT_ZAGRADA 25 {
KR_INT 26 int
IDN 26 a
TOCKAZAREZ 26 ;
KR_INT 27 int
IDN 27 b
TOCKAZAREZ 27 ;
IDN 28 a
OP_PRIDRUZI 28 =
IDN 28 b
TOCKAZAREZ 28 ;
IDN 29 x
OP_PRIDRUZI 29 =
BROJ 29 4
TOCKAZAREZ 29 ;
D_VIT_ZAGRADA 30 }
KR_RETURN 31 return
IDN 31 f
L_ZAGRADA 31 (
D_ZAGRADA 31 )
TOCKAZAREZ 31 ;
D_VIT_ZAGRADA 32 }
KR_INT 34 int
IDN 34 fact
L_ZAGRADA 34 (
KR_INT 34 int
IDN 34 bzvz
D_ZAGRADA 34 )
TOCKAZAREZ 34 ;
KR_VOID 36 void
IDN 36 foo
L_ZAGRADA 36 (
KR_INT 36 int
IDN 36 x
ZAREZ 36 ,
KR_INT 36 int
IDN 36 c
ZAREZ 36 ,
KR_CHAR 36 char
IDN 36 h
D_ZAGRADA 36 )
L_VIT_ZAGRADA 37 {
KR_INT 38 int
IDN 38 i
OP_PRIDRUZI 38 =
IDN 38 fact
L_ZAGRADA 38 (
IDN 38 x
D_ZAGRADA 38 )
TOCKAZAREZ 38 ;
KR_INT 39 int
IDN 39 a
OP_PRIDRUZI 39 =
IDN 39 a
PLUS 39 +
BROJ 39 1
TOCKAZAREZ 39 ;
KR_VOID 40 void
IDN 40 foo3
L_ZAGRADA 40 (
KR_VOID 40 void
D_ZAGRADA 40 )
TOCKAZAREZ 40 ;
KR_INT 41 int
IDN 41 niz1
L_UGL_ZAGRADA 41 [
BROJ 41 5
D_UGL_ZAGRADA 41 ]
OP_PRIDRUZI 41 =
L_VIT_ZAGRADA 41 {
BROJ 41 1
ZAREZ 41 ,
BROJ 41 2
ZAREZ 41 ,
BROJ 41 3
D_VIT_ZAGRADA 41 }
TOCKAZAREZ 41 ;
KR_FOR 44 for
L_ZAGRADA 44 (
IDN 44 i
OP_PRIDRUZI 44 =
BROJ 44 0
TOCKAZAREZ 44 ;
IDN 44 i
OP_LT 44 <
BROJ 44 5
TOCKAZAREZ 44 ;
IDN 44 i
OP_INC 44 ++
D_ZAGRADA 44 )
KR_BREAK 45 break
TOCKAZAREZ 45 ;
KR_WHILE 46 while
L_ZAGRADA 46 (
BROJ 46 1
D_ZAGRADA 46 )
L_VIT_ZAGRADA 47 {
KR_BREAK 48 break
TOCKAZAREZ 48 ;
IDN 49 i
OP_PRIDRUZI 49 =
IDN 49 i
PLUS 49 +
BROJ 49 2
TOCKAZAREZ 49 ;
D_VIT_ZAGRADA 50 }
KR_RETURN 52 return
TOCKAZAREZ 52 ;
D_VIT_ZAGRADA 54 }
KR_CHAR 56 char
IDN 56 proba3
L_ZAGRADA 56 (
KR_VOID 56 void
D_ZAGRADA 56 )
L_VIT_ZAGRADA 57 {
IDN 58 x
OP_PRIDRUZI 58 =
BROJ 58 4
TOCKAZAREZ 58 ;
KR_IF 59 if
L_ZAGRADA 59 (
BROJ 59 0
D_ZAGRADA 59 )
L_VIT_ZAGRADA 60 {
IDN 61 x
OP_PRIDRUZI 61 =
BROJ 61 6
TOCKAZAREZ 61 ;
KR_RETURN 62 return
ZNAK 62 'a'
TOCKAZAREZ 62 ;
D_VIT_ZAGRADA 63 }
KR_ELSE 63 else
L_VIT_ZAGRADA 63 {
KR_RETURN 64 return
L_ZAGRADA 64 (
KR_CHAR 64 char
D_ZAGRADA 64 )
BROJ 64 97
TOCKAZAREZ 64 ;
D_VIT_ZAGRADA 66 }
D_VIT_ZAGRADA 67 }
KR_CHAR 69 char
IDN 69 proba
L_ZAGRADA 69 (
KR_VOID 69 void
D_ZAGRADA 69 )
L_VIT_ZAGRADA 70 {
KR_RETURN 71 return
L_ZAGRADA 71 (
KR_CHAR 71 char
D_ZAGRADA 71 )
BROJ 71 97
TOCKAZAREZ 71 ;
D_VIT_ZAGRADA 72 }
KR_INT 75 int
IDN 75 proba2
L_ZAGRADA 75 (
KR_VOID 75 void
D_ZAGRADA 75 )
L_VIT_ZAGRADA 76 {
KR_RETURN 78 return
ZNAK 78 'a'
TOCKAZAREZ 78 ;
D_VIT_ZAGRADA 79 }
KR_INT 81 int
IDN 81 fact
L_ZAGRADA 81 (
KR_INT 81 int
IDN 81 n
D_ZAGRADA 81 )
L_VIT_ZAGRADA 82 {
IDN 83 foo
L_ZAGRADA 83 (
BROJ 83 1
ZAREZ 83 ,
BROJ 83 2
ZAREZ 83 ,
ZNAK 83 'h'
D_ZAGRADA 83 )
TOCKAZAREZ 83 ;
KR_IF 84 if
L_ZAGRADA 84 (
IDN 84 n
OP_GT 84 >
BROJ 84 0
D_ZAGRADA 84 )
KR_RETURN 85 return
IDN 85 n
OP_PUTA 85 *
IDN 85 fact
L_ZAGRADA 85 (
IDN 85 n
MINUS 85 -
BROJ 85 1
D_ZAGRADA 85 )
TOCKAZAREZ 85 ;
KR_ELSE 86 else
KR_RETURN 87 return
BROJ 87 1
TOCKAZAREZ 87 ;
D_VIT_ZAGRADA 88 }
KR_VOID 90 void
IDN 90 foo3
L_ZAGRADA 90 (
KR_VOID 90 void
D_ZAGRADA 90 )
L_VIT_ZAGRADA 91 {
KR_INT 92 int
IDN 92 i
OP_PRIDRUZI 92 =
BROJ 92 8
TOCKAZAREZ 92 ;
KR_RETURN 94 return
TOCKAZAREZ 94 ;
D_VIT_ZAGRADA 95 }
KR_VOID 97 void
IDN 97 f2
L_ZAGRADA 97 (
KR_INT 97 int
IDN 97 x
ZAREZ 97 ,
KR_INT 97 int
IDN 97 a
L_UGL_ZAGRADA 97 [
D_UGL_ZAGRADA 97 ]
D_ZAGRADA 97 )
L_VIT_ZAGRADA 97 {
IDN 98 x
OP_PRIDRUZI 98 =
IDN 98 x
PLUS 98 +
BROJ 98 1
TOCKAZAREZ 98 ;
IDN 99 a
L_UGL_ZAGRADA 99 [
BROJ 99 0
D_UGL_ZAGRADA 99 ]
OP_PRIDRUZI 99 =
IDN 99 a
L_UGL_ZAGRADA 99 [
BROJ 99 0
D_UGL_ZAGRADA 99 ]
PLUS 99 +
BROJ 99 1
TOCKAZAREZ 99 ;
D_VIT_ZAGRADA 100 }
KR_INT 111 int
IDN 111 main2
L_ZAGRADA 111 (
KR_VOID 111 void
D_ZAGRADA 111 )
L_VIT_ZAGRADA 111 {
KR_INT 112 int
IDN 112 x
OP_PRIDRUZI 112 =
BROJ 112 2147483647
ZAREZ 112 ,
IDN 112 y
TOCKAZAREZ 112 ;
L_ZAGRADA 114 (
KR_INT 114 int
D_ZAGRADA 114 )
ZNAK 114 'a'
TOCKAZAREZ 114 ;
L_ZAGRADA 115 (
KR_CONST 115 const
KR_CHAR 115 char
D_ZAGRADA 115 )
IDN 115 x
TOCKAZAREZ 115 ;
L_ZAGRADA 116 (
KR_CONST 116 const
KR_INT 116 int
D_ZAGRADA 116 )
ZNAK 116 'a'
TOCKAZAREZ 116 ;
L_ZAGRADA 117 (
KR_CHAR 117 char
D_ZAGRADA 117 )
L_ZAGRADA 117 (
L_ZAGRADA 117 (
KR_CONST 117 const
KR_INT 117 int
D_ZAGRADA 117 )
BROJ 117 300
PLUS 117 +
L_ZAGRADA 117 (
KR_INT 117 int
D_ZAGRADA 117 )
ZNAK 117 'a'
D_ZAGRADA 117 )
TOCKAZAREZ 117 ;
L_ZAGRADA 118 (
KR_INT 118 int
D_ZAGRADA 118 )
L_ZAGRADA 118 (
KR_CHAR 118 char
D_ZAGRADA 118 )
L_ZAGRADA 118 (
KR_CONST 118 const
KR_INT 118 int
D_ZAGRADA 118 )
L_ZAGRADA 118 (
KR_CONST 118 const
KR_CHAR 118 char
D_ZAGRADA 118 )
L_ZAGRADA 118 (
IDN 118 x
PLUS 118 +
IDN 118 y
D_ZAGRADA 118 )
TOCKAZAREZ 118 ;
KR_RETURN 120 return
BROJ 120 0
TOCKAZAREZ 120 ;
D_VIT_ZAGRADA 121 }
