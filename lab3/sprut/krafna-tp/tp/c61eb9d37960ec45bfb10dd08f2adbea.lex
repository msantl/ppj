KR_CHAR 14 char
IDN 14 x
TOCKAZAREZ 14 ;
KR_CONST 15 const
KR_INT 15 int
IDN 15 z
OP_PRIDRUZI 15 =
BROJ 15 9
TOCKAZAREZ 15 ;
KR_INT 16 int
IDN 16 printf
L_ZAGRADA 16 (
KR_CONST 16 const
KR_CHAR 16 char
IDN 16 format
L_UGL_ZAGRADA 16 [
D_UGL_ZAGRADA 16 ]
D_ZAGRADA 16 )
L_VIT_ZAGRADA 16 {
KR_RETURN 18 return
BROJ 18 0
TOCKAZAREZ 18 ;
D_VIT_ZAGRADA 19 }
KR_INT 20 int
IDN 20 x
TOCKAZAREZ 20 ;
KR_INT 21 int
IDN 21 fun
L_ZAGRADA 21 (
KR_INT 21 int
IDN 21 a
ZAREZ 21 ,
KR_CHAR 21 char
IDN 21 g
L_UGL_ZAGRADA 21 [
D_UGL_ZAGRADA 21 ]
D_ZAGRADA 21 )
TOCKAZAREZ 21 ;
KR_INT 22 int
IDN 22 main
L_ZAGRADA 22 (
KR_VOID 22 void
D_ZAGRADA 22 )
L_VIT_ZAGRADA 22 {
KR_INT 23 int
IDN 23 a
OP_PRIDRUZI 23 =
BROJ 23 4
TOCKAZAREZ 23 ;
L_VIT_ZAGRADA 24 {
KR_INT 25 int
IDN 25 a
OP_PRIDRUZI 25 =
BROJ 25 2
TOCKAZAREZ 25 ;
KR_IF 26 if
L_ZAGRADA 26 (
IDN 26 a
OP_EQ 26 ==
BROJ 26 3
D_ZAGRADA 26 )
L_VIT_ZAGRADA 27 {
KR_BREAK 28 break
TOCKAZAREZ 28 ;
D_VIT_ZAGRADA 29 }
KR_CHAR 30 char
IDN 30 jjj
L_UGL_ZAGRADA 30 [
BROJ 30 2
D_UGL_ZAGRADA 30 ]
OP_PRIDRUZI 30 =
L_VIT_ZAGRADA 30 {
ZNAK 30 'a'
ZAREZ 30 ,
ZNAK 30 'b'
D_VIT_ZAGRADA 30 }
TOCKAZAREZ 30 ;
KR_INT 31 int
IDN 31 c
OP_PRIDRUZI 31 =
IDN 31 fun
L_ZAGRADA 31 (
BROJ 31 4
ZAREZ 31 ,
IDN 31 jjj
L_UGL_ZAGRADA 31 [
BROJ 31 0
D_UGL_ZAGRADA 31 ]
D_ZAGRADA 31 )
TOCKAZAREZ 31 ;
KR_RETURN 32 return
IDN 32 printf
L_ZAGRADA 32 (
NIZ_ZNAKOVA 32 "hello world!\n"
D_ZAGRADA 32 )
TOCKAZAREZ 32 ;
D_VIT_ZAGRADA 33 }
KR_INT 35 int
IDN 35 fun
L_ZAGRADA 35 (
KR_INT 35 int
IDN 35 a
ZAREZ 35 ,
KR_CHAR 35 char
IDN 35 g
L_UGL_ZAGRADA 35 [
D_UGL_ZAGRADA 35 ]
D_ZAGRADA 35 )
L_VIT_ZAGRADA 36 {
KR_CONST 37 const
KR_INT 37 int
IDN 37 i
OP_PRIDRUZI 37 =
BROJ 37 8
TOCKAZAREZ 37 ;
KR_CHAR 38 char
IDN 38 ch
OP_PRIDRUZI 38 =
ZNAK 38 'h'
TOCKAZAREZ 38 ;
KR_RETURN 39 return
IDN 39 i
PLUS 39 +
IDN 39 ch
TOCKAZAREZ 39 ;
D_VIT_ZAGRADA 40 }
