KR_VOID 1 void
IDN 1 foo
L_ZAGRADA 1 (
KR_INT 1 int
IDN 1 x
ZAREZ 1 ,
KR_INT 1 int
IDN 1 c
ZAREZ 1 ,
KR_CHAR 1 char
IDN 1 h
D_ZAGRADA 1 )
TOCKAZAREZ 1 ;
KR_INT 3 int
IDN 3 f
L_ZAGRADA 3 (
KR_VOID 3 void
D_ZAGRADA 3 )
L_VIT_ZAGRADA 4 {
KR_RETURN 5 return
BROJ 5 0
TOCKAZAREZ 5 ;
D_VIT_ZAGRADA 6 }
KR_INT 8 int
IDN 8 x
OP_PRIDRUZI 8 =
BROJ 8 3
TOCKAZAREZ 8 ;
KR_INT 12 int
IDN 12 main
L_ZAGRADA 12 (
KR_VOID 12 void
D_ZAGRADA 12 )
L_VIT_ZAGRADA 13 {
KR_INT 14 int
IDN 14 a
OP_PRIDRUZI 14 =
BROJ 14 5
TOCKAZAREZ 14 ;
KR_CONST 15 const
KR_CHAR 15 char
IDN 15 c
OP_PRIDRUZI 15 =
ZNAK 15 'i'
TOCKAZAREZ 15 ;
KR_INT 16 int
IDN 16 niz
L_UGL_ZAGRADA 16 [
BROJ 16 3
D_UGL_ZAGRADA 16 ]
TOCKAZAREZ 16 ;
KR_INT 17 int
IDN 17 x
OP_PRIDRUZI 17 =
BROJ 17 5
TOCKAZAREZ 17 ;
KR_INT 18 int
IDN 18 y
OP_PRIDRUZI 18 =
IDN 18 x
PLUS 18 +
BROJ 18 1
TOCKAZAREZ 18 ;
IDN 19 a
OP_PRIDRUZI 19 =
IDN 19 a
PLUS 19 +
BROJ 19 3
TOCKAZAREZ 19 ;
KR_IF 21 if
L_ZAGRADA 21 (
IDN 21 a
OP_GT 21 >
BROJ 21 2
D_ZAGRADA 21 )
L_VIT_ZAGRADA 22 {
KR_INT 23 int
IDN 23 a
TOCKAZAREZ 23 ;
KR_INT 24 int
IDN 24 b
TOCKAZAREZ 24 ;
IDN 25 a
OP_PRIDRUZI 25 =
IDN 25 b
TOCKAZAREZ 25 ;
IDN 26 x
OP_PRIDRUZI 26 =
BROJ 26 4
TOCKAZAREZ 26 ;
D_VIT_ZAGRADA 27 }
KR_RETURN 28 return
IDN 28 f
L_ZAGRADA 28 (
D_ZAGRADA 28 )
TOCKAZAREZ 28 ;
D_VIT_ZAGRADA 29 }
KR_INT 31 int
IDN 31 fact
L_ZAGRADA 31 (
KR_INT 31 int
IDN 31 bzvz
D_ZAGRADA 31 )
TOCKAZAREZ 31 ;
KR_VOID 33 void
IDN 33 foo
L_ZAGRADA 33 (
KR_INT 33 int
IDN 33 x
ZAREZ 33 ,
KR_INT 33 int
IDN 33 c
ZAREZ 33 ,
KR_CHAR 33 char
IDN 33 h
D_ZAGRADA 33 )
L_VIT_ZAGRADA 34 {
KR_INT 35 int
IDN 35 i
OP_PRIDRUZI 35 =
IDN 35 fact
L_ZAGRADA 35 (
IDN 35 x
D_ZAGRADA 35 )
TOCKAZAREZ 35 ;
KR_INT 36 int
IDN 36 a
OP_PRIDRUZI 36 =
IDN 36 a
PLUS 36 +
BROJ 36 1
TOCKAZAREZ 36 ;
KR_VOID 37 void
IDN 37 foo3
L_ZAGRADA 37 (
KR_VOID 37 void
D_ZAGRADA 37 )
TOCKAZAREZ 37 ;
KR_INT 38 int
IDN 38 niz1
L_UGL_ZAGRADA 38 [
BROJ 38 5
D_UGL_ZAGRADA 38 ]
OP_PRIDRUZI 38 =
L_VIT_ZAGRADA 38 {
BROJ 38 1
ZAREZ 38 ,
BROJ 38 2
ZAREZ 38 ,
BROJ 38 3
D_VIT_ZAGRADA 38 }
TOCKAZAREZ 38 ;
KR_FOR 41 for
L_ZAGRADA 41 (
IDN 41 i
OP_PRIDRUZI 41 =
BROJ 41 0
TOCKAZAREZ 41 ;
IDN 41 i
OP_LT 41 <
BROJ 41 5
TOCKAZAREZ 41 ;
IDN 41 i
OP_INC 41 ++
D_ZAGRADA 41 )
KR_BREAK 42 break
TOCKAZAREZ 42 ;
KR_WHILE 43 while
L_ZAGRADA 43 (
BROJ 43 1
D_ZAGRADA 43 )
L_VIT_ZAGRADA 44 {
KR_BREAK 45 break
TOCKAZAREZ 45 ;
IDN 46 i
OP_PRIDRUZI 46 =
IDN 46 i
PLUS 46 +
BROJ 46 2
TOCKAZAREZ 46 ;
D_VIT_ZAGRADA 47 }
KR_RETURN 49 return
TOCKAZAREZ 49 ;
D_VIT_ZAGRADA 51 }
KR_CHAR 53 char
IDN 53 proba3
L_ZAGRADA 53 (
KR_VOID 53 void
D_ZAGRADA 53 )
L_VIT_ZAGRADA 54 {
IDN 55 x
OP_PRIDRUZI 55 =
BROJ 55 4
TOCKAZAREZ 55 ;
KR_IF 56 if
L_ZAGRADA 56 (
BROJ 56 0
D_ZAGRADA 56 )
L_VIT_ZAGRADA 57 {
IDN 58 x
OP_PRIDRUZI 58 =
BROJ 58 6
TOCKAZAREZ 58 ;
KR_RETURN 59 return
ZNAK 59 'a'
TOCKAZAREZ 59 ;
D_VIT_ZAGRADA 60 }
KR_ELSE 60 else
L_VIT_ZAGRADA 60 {
KR_RETURN 61 return
L_ZAGRADA 61 (
KR_CHAR 61 char
D_ZAGRADA 61 )
BROJ 61 97
TOCKAZAREZ 61 ;
D_VIT_ZAGRADA 63 }
D_VIT_ZAGRADA 64 }
KR_CHAR 66 char
IDN 66 proba
L_ZAGRADA 66 (
KR_VOID 66 void
D_ZAGRADA 66 )
L_VIT_ZAGRADA 67 {
KR_RETURN 68 return
L_ZAGRADA 68 (
KR_CHAR 68 char
D_ZAGRADA 68 )
BROJ 68 97
TOCKAZAREZ 68 ;
D_VIT_ZAGRADA 69 }
KR_INT 72 int
IDN 72 proba2
L_ZAGRADA 72 (
KR_VOID 72 void
D_ZAGRADA 72 )
L_VIT_ZAGRADA 73 {
KR_RETURN 75 return
ZNAK 75 'a'
TOCKAZAREZ 75 ;
D_VIT_ZAGRADA 76 }
KR_INT 78 int
IDN 78 fact
L_ZAGRADA 78 (
KR_INT 78 int
IDN 78 n
D_ZAGRADA 78 )
L_VIT_ZAGRADA 79 {
IDN 80 foo
L_ZAGRADA 80 (
BROJ 80 1
ZAREZ 80 ,
BROJ 80 2
ZAREZ 80 ,
ZNAK 80 'h'
D_ZAGRADA 80 )
TOCKAZAREZ 80 ;
KR_IF 81 if
L_ZAGRADA 81 (
IDN 81 n
OP_GT 81 >
BROJ 81 0
D_ZAGRADA 81 )
KR_RETURN 82 return
IDN 82 n
OP_PUTA 82 *
IDN 82 fact
L_ZAGRADA 82 (
IDN 82 n
MINUS 82 -
BROJ 82 1
D_ZAGRADA 82 )
TOCKAZAREZ 82 ;
KR_ELSE 83 else
KR_RETURN 84 return
BROJ 84 1
TOCKAZAREZ 84 ;
D_VIT_ZAGRADA 85 }
KR_VOID 87 void
IDN 87 foo3
L_ZAGRADA 87 (
KR_VOID 87 void
D_ZAGRADA 87 )
L_VIT_ZAGRADA 88 {
KR_INT 89 int
IDN 89 i
OP_PRIDRUZI 89 =
BROJ 89 8
TOCKAZAREZ 89 ;
IDN 90 main2
L_ZAGRADA 90 (
D_ZAGRADA 90 )
TOCKAZAREZ 90 ;
KR_RETURN 91 return
TOCKAZAREZ 91 ;
D_VIT_ZAGRADA 92 }
KR_VOID 94 void
IDN 94 f2
L_ZAGRADA 94 (
KR_INT 94 int
IDN 94 x
ZAREZ 94 ,
KR_INT 94 int
IDN 94 a
L_UGL_ZAGRADA 94 [
D_UGL_ZAGRADA 94 ]
D_ZAGRADA 94 )
L_VIT_ZAGRADA 94 {
IDN 95 x
OP_PRIDRUZI 95 =
IDN 95 x
PLUS 95 +
BROJ 95 1
TOCKAZAREZ 95 ;
IDN 96 a
L_UGL_ZAGRADA 96 [
BROJ 96 0
D_UGL_ZAGRADA 96 ]
OP_PRIDRUZI 96 =
IDN 96 a
L_UGL_ZAGRADA 96 [
BROJ 96 0
D_UGL_ZAGRADA 96 ]
PLUS 96 +
BROJ 96 1
TOCKAZAREZ 96 ;
D_VIT_ZAGRADA 97 }
KR_INT 108 int
IDN 108 main2
L_ZAGRADA 108 (
KR_VOID 108 void
D_ZAGRADA 108 )
L_VIT_ZAGRADA 108 {
KR_INT 109 int
IDN 109 x
OP_PRIDRUZI 109 =
BROJ 109 2147483647
ZAREZ 109 ,
IDN 109 y
TOCKAZAREZ 109 ;
L_ZAGRADA 111 (
KR_INT 111 int
D_ZAGRADA 111 )
ZNAK 111 'a'
TOCKAZAREZ 111 ;
L_ZAGRADA 112 (
KR_CONST 112 const
KR_CHAR 112 char
D_ZAGRADA 112 )
IDN 112 x
TOCKAZAREZ 112 ;
L_ZAGRADA 113 (
KR_CONST 113 const
KR_INT 113 int
D_ZAGRADA 113 )
ZNAK 113 'a'
TOCKAZAREZ 113 ;
L_ZAGRADA 114 (
KR_CHAR 114 char
D_ZAGRADA 114 )
L_ZAGRADA 114 (
L_ZAGRADA 114 (
KR_CONST 114 const
KR_INT 114 int
D_ZAGRADA 114 )
BROJ 114 300
PLUS 114 +
L_ZAGRADA 114 (
KR_INT 114 int
D_ZAGRADA 114 )
ZNAK 114 'a'
D_ZAGRADA 114 )
TOCKAZAREZ 114 ;
L_ZAGRADA 115 (
KR_INT 115 int
D_ZAGRADA 115 )
L_ZAGRADA 115 (
KR_CHAR 115 char
D_ZAGRADA 115 )
L_ZAGRADA 115 (
KR_CONST 115 const
KR_INT 115 int
D_ZAGRADA 115 )
L_ZAGRADA 115 (
KR_CONST 115 const
KR_CHAR 115 char
D_ZAGRADA 115 )
L_ZAGRADA 115 (
IDN 115 x
PLUS 115 +
IDN 115 y
D_ZAGRADA 115 )
TOCKAZAREZ 115 ;
KR_RETURN 117 return
BROJ 117 0
TOCKAZAREZ 117 ;
D_VIT_ZAGRADA 118 }
