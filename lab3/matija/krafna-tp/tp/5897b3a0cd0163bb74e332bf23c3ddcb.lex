KR_INT 1 int
IDN 1 main
L_ZAGRADA 1 (
KR_VOID 1 void
D_ZAGRADA 1 )
L_VIT_ZAGRADA 2 {
KR_INT 3 int
IDN 3 i
OP_PRIDRUZI 3 =
BROJ 3 0
TOCKAZAREZ 3 ;
KR_FOR 4 for
L_ZAGRADA 4 (
IDN 4 i
OP_PRIDRUZI 4 =
BROJ 4 2
TOCKAZAREZ 4 ;
IDN 4 i
OP_LT 4 <
IDN 4 i
OP_INC 4 ++
TOCKAZAREZ 4 ;
IDN 4 i
OP_INC 4 ++
D_ZAGRADA 4 )
TOCKAZAREZ 4 ;
L_VIT_ZAGRADA 5 {
KR_WHILE 6 while
L_ZAGRADA 6 (
IDN 6 i
OP_EQ 6 ==
BROJ 6 0
D_ZAGRADA 6 )
TOCKAZAREZ 6 ;
KR_WHILE 7 while
L_ZAGRADA 7 (
IDN 7 i
OP_NEQ 7 !=
ZNAK 7 '0'
D_ZAGRADA 7 )
TOCKAZAREZ 7 ;
KR_IF 8 if
L_ZAGRADA 8 (
BROJ 8 1
OP_I 8 &&
OP_NEG 8 !
IDN 8 i
D_ZAGRADA 8 )
IDN 8 i
OP_PRIDRUZI 8 =
BROJ 8 2
TOCKAZAREZ 8 ;
KR_ELSE 8 else
IDN 8 i
OP_PRIDRUZI 8 =
BROJ 8 0
TOCKAZAREZ 8 ;
KR_WHILE 9 while
L_ZAGRADA 9 (
IDN 9 i
OP_DEC 9 --
OP_EQ 9 ==
BROJ 9 0
D_ZAGRADA 9 )
L_VIT_ZAGRADA 10 {
IDN 11 i
OP_INC 11 ++
TOCKAZAREZ 11 ;
D_VIT_ZAGRADA 12 }
D_VIT_ZAGRADA 13 }
KR_RETURN 14 return
BROJ 14 0
TOCKAZAREZ 14 ;
D_VIT_ZAGRADA 15 }
