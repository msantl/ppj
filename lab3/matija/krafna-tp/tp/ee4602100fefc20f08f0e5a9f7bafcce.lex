KR_CHAR 14 char
IDN 14 x
TOCKAZAREZ 14 ;
KR_CONST 15 const
KR_INT 15 int
IDN 15 z
OP_PRIDRUZI 15 =
BROJ 15 9
TOCKAZAREZ 15 ;
KR_INT 16 int
IDN 16 printf
L_ZAGRADA 16 (
KR_CONST 16 const
KR_CHAR 16 char
IDN 16 format
L_UGL_ZAGRADA 16 [
D_UGL_ZAGRADA 16 ]
D_ZAGRADA 16 )
L_VIT_ZAGRADA 16 {
KR_RETURN 18 return
BROJ 18 0
TOCKAZAREZ 18 ;
D_VIT_ZAGRADA 19 }
KR_INT 20 int
IDN 20 fun
L_ZAGRADA 20 (
KR_INT 20 int
IDN 20 a
ZAREZ 20 ,
KR_CHAR 20 char
IDN 20 g
L_UGL_ZAGRADA 20 [
D_UGL_ZAGRADA 20 ]
D_ZAGRADA 20 )
TOCKAZAREZ 20 ;
KR_INT 21 int
IDN 21 main
L_ZAGRADA 21 (
KR_VOID 21 void
D_ZAGRADA 21 )
L_VIT_ZAGRADA 21 {
KR_INT 22 int
IDN 22 a
OP_PRIDRUZI 22 =
BROJ 22 4
TOCKAZAREZ 22 ;
L_VIT_ZAGRADA 23 {
KR_INT 24 int
IDN 24 a
OP_PRIDRUZI 24 =
BROJ 24 2
TOCKAZAREZ 24 ;
KR_WHILE 25 while
L_ZAGRADA 25 (
IDN 25 a
OP_EQ 25 ==
BROJ 25 3
D_ZAGRADA 25 )
L_VIT_ZAGRADA 26 {
KR_BREAK 27 break
TOCKAZAREZ 27 ;
D_VIT_ZAGRADA 28 }
KR_CHAR 29 char
IDN 29 jjj
L_UGL_ZAGRADA 29 [
BROJ 29 3
D_UGL_ZAGRADA 29 ]
OP_PRIDRUZI 29 =
NIZ_ZNAKOVA 29 "ab"
TOCKAZAREZ 29 ;
KR_INT 30 int
IDN 30 c
OP_PRIDRUZI 30 =
IDN 30 fun
L_ZAGRADA 30 (
BROJ 30 4
ZAREZ 30 ,
IDN 30 jjj
D_ZAGRADA 30 )
TOCKAZAREZ 30 ;
KR_RETURN 31 return
IDN 31 printf
L_ZAGRADA 31 (
NIZ_ZNAKOVA 31 "hello world!\n"
D_ZAGRADA 31 )
TOCKAZAREZ 31 ;
D_VIT_ZAGRADA 32 }
KR_INT 34 int
IDN 34 fun
L_ZAGRADA 34 (
KR_INT 34 int
IDN 34 a
ZAREZ 34 ,
KR_CHAR 34 char
IDN 34 g
L_UGL_ZAGRADA 34 [
D_UGL_ZAGRADA 34 ]
D_ZAGRADA 34 )
L_VIT_ZAGRADA 35 {
KR_CONST 36 const
KR_INT 36 int
IDN 36 i
OP_PRIDRUZI 36 =
BROJ 36 8
TOCKAZAREZ 36 ;
KR_CHAR 37 char
IDN 37 ch
OP_PRIDRUZI 37 =
ZNAK 37 'h'
TOCKAZAREZ 37 ;
KR_RETURN 38 return
IDN 38 i
PLUS 38 +
IDN 38 ch
TOCKAZAREZ 38 ;
D_VIT_ZAGRADA 39 }
