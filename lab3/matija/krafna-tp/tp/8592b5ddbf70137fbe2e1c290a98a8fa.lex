KR_INT 2 int
IDN 2 x
OP_PRIDRUZI 2 =
BROJ 2 7
TOCKAZAREZ 2 ;
KR_CHAR 3 char
IDN 3 f
L_ZAGRADA 3 (
KR_CHAR 3 char
IDN 3 x
D_ZAGRADA 3 )
L_VIT_ZAGRADA 4 {
KR_INT 5 int
IDN 5 i
OP_PRIDRUZI 5 =
BROJ 5 1
TOCKAZAREZ 5 ;
L_VIT_ZAGRADA 6 {
KR_INT 7 int
IDN 7 x
OP_PRIDRUZI 7 =
BROJ 7 2
TOCKAZAREZ 7 ;
IDN 8 i
OP_PRIDRUZI 8 =
IDN 8 i
OP_INC 8 ++
PLUS 8 +
IDN 8 x
OP_INC 8 ++
TOCKAZAREZ 8 ;
L_VIT_ZAGRADA 9 {
KR_CHAR 10 char
IDN 10 x
OP_PRIDRUZI 10 =
ZNAK 10 'a'
TOCKAZAREZ 10 ;
IDN 11 i
OP_PRIDRUZI 11 =
IDN 11 i
PLUS 11 +
IDN 11 x
OP_INC 11 ++
TOCKAZAREZ 11 ;
D_VIT_ZAGRADA 12 }
D_VIT_ZAGRADA 13 }
KR_RETURN 14 return
L_ZAGRADA 14 (
KR_CHAR 14 char
D_ZAGRADA 14 )
IDN 14 x
OP_INC 14 ++
TOCKAZAREZ 14 ;
D_VIT_ZAGRADA 15 }
KR_INT 16 int
IDN 16 main
L_ZAGRADA 16 (
KR_VOID 16 void
D_ZAGRADA 16 )
L_VIT_ZAGRADA 17 {
KR_CHAR 18 char
IDN 18 x
TOCKAZAREZ 18 ;
IDN 19 f
L_ZAGRADA 19 (
L_ZAGRADA 19 (
KR_CHAR 19 char
D_ZAGRADA 19 )
L_ZAGRADA 19 (
IDN 19 f
L_ZAGRADA 19 (
IDN 19 f
L_ZAGRADA 19 (
ZNAK 19 'X'
D_ZAGRADA 19 )
D_ZAGRADA 19 )
PLUS 19 +
BROJ 19 2
D_ZAGRADA 19 )
D_ZAGRADA 19 )
TOCKAZAREZ 19 ;
KR_RETURN 20 return
IDN 20 x
TOCKAZAREZ 20 ;
D_VIT_ZAGRADA 21 }
