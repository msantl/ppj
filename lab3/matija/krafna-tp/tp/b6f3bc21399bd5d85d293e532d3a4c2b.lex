KR_VOID 14 void
IDN 14 foo
L_ZAGRADA 14 (
KR_INT 14 int
IDN 14 x
ZAREZ 14 ,
KR_INT 14 int
IDN 14 c
ZAREZ 14 ,
KR_CHAR 14 char
IDN 14 h
D_ZAGRADA 14 )
TOCKAZAREZ 14 ;
KR_INT 16 int
IDN 16 f
L_ZAGRADA 16 (
KR_VOID 16 void
D_ZAGRADA 16 )
L_VIT_ZAGRADA 17 {
KR_RETURN 18 return
BROJ 18 0
TOCKAZAREZ 18 ;
D_VIT_ZAGRADA 19 }
KR_INT 21 int
IDN 21 x
OP_PRIDRUZI 21 =
BROJ 21 3
TOCKAZAREZ 21 ;
KR_INT 25 int
IDN 25 main
L_ZAGRADA 25 (
KR_VOID 25 void
D_ZAGRADA 25 )
L_VIT_ZAGRADA 26 {
KR_INT 27 int
IDN 27 a
OP_PRIDRUZI 27 =
BROJ 27 5
TOCKAZAREZ 27 ;
KR_CONST 28 const
KR_CHAR 28 char
IDN 28 c
OP_PRIDRUZI 28 =
ZNAK 28 'i'
TOCKAZAREZ 28 ;
KR_INT 29 int
IDN 29 niz
L_UGL_ZAGRADA 29 [
BROJ 29 3
D_UGL_ZAGRADA 29 ]
TOCKAZAREZ 29 ;
KR_VOID 30 void
IDN 30 foo
L_ZAGRADA 30 (
KR_INT 30 int
IDN 30 x
ZAREZ 30 ,
KR_INT 30 int
IDN 30 c
ZAREZ 30 ,
KR_CHAR 30 char
IDN 30 h
D_ZAGRADA 30 )
TOCKAZAREZ 30 ;
KR_INT 31 int
IDN 31 x
OP_PRIDRUZI 31 =
BROJ 31 5
TOCKAZAREZ 31 ;
KR_INT 32 int
IDN 32 y
OP_PRIDRUZI 32 =
IDN 32 x
PLUS 32 +
BROJ 32 1
TOCKAZAREZ 32 ;
IDN 33 a
OP_PRIDRUZI 33 =
IDN 33 a
PLUS 33 +
BROJ 33 3
TOCKAZAREZ 33 ;
KR_IF 35 if
L_ZAGRADA 35 (
IDN 35 a
OP_GT 35 >
BROJ 35 2
D_ZAGRADA 35 )
L_VIT_ZAGRADA 36 {
KR_INT 37 int
IDN 37 a
TOCKAZAREZ 37 ;
KR_INT 38 int
IDN 38 b
TOCKAZAREZ 38 ;
IDN 39 a
OP_PRIDRUZI 39 =
IDN 39 b
TOCKAZAREZ 39 ;
IDN 40 x
OP_PRIDRUZI 40 =
BROJ 40 4
TOCKAZAREZ 40 ;
D_VIT_ZAGRADA 41 }
KR_RETURN 42 return
IDN 42 f
L_ZAGRADA 42 (
D_ZAGRADA 42 )
TOCKAZAREZ 42 ;
D_VIT_ZAGRADA 43 }
KR_INT 45 int
IDN 45 fact
L_ZAGRADA 45 (
KR_INT 45 int
IDN 45 bzvz
D_ZAGRADA 45 )
TOCKAZAREZ 45 ;
KR_VOID 47 void
IDN 47 foo
L_ZAGRADA 47 (
KR_INT 47 int
IDN 47 x
ZAREZ 47 ,
KR_INT 47 int
IDN 47 c
ZAREZ 47 ,
KR_CHAR 47 char
IDN 47 h
D_ZAGRADA 47 )
L_VIT_ZAGRADA 48 {
KR_INT 49 int
IDN 49 i
OP_PRIDRUZI 49 =
IDN 49 fact
L_ZAGRADA 49 (
IDN 49 x
D_ZAGRADA 49 )
TOCKAZAREZ 49 ;
KR_INT 50 int
IDN 50 a
OP_PRIDRUZI 50 =
IDN 50 a
PLUS 50 +
BROJ 50 1
TOCKAZAREZ 50 ;
KR_VOID 51 void
IDN 51 foo3
L_ZAGRADA 51 (
KR_VOID 51 void
D_ZAGRADA 51 )
TOCKAZAREZ 51 ;
KR_INT 52 int
IDN 52 niz1
L_UGL_ZAGRADA 52 [
BROJ 52 5
D_UGL_ZAGRADA 52 ]
OP_PRIDRUZI 52 =
L_VIT_ZAGRADA 52 {
BROJ 52 1
ZAREZ 52 ,
BROJ 52 2
ZAREZ 52 ,
BROJ 52 3
D_VIT_ZAGRADA 52 }
TOCKAZAREZ 52 ;
KR_FOR 55 for
L_ZAGRADA 55 (
IDN 55 i
OP_PRIDRUZI 55 =
BROJ 55 0
TOCKAZAREZ 55 ;
IDN 55 i
OP_LT 55 <
BROJ 55 5
TOCKAZAREZ 55 ;
IDN 55 i
OP_INC 55 ++
D_ZAGRADA 55 )
KR_BREAK 56 break
TOCKAZAREZ 56 ;
KR_WHILE 57 while
L_ZAGRADA 57 (
BROJ 57 1
D_ZAGRADA 57 )
L_VIT_ZAGRADA 58 {
KR_BREAK 59 break
TOCKAZAREZ 59 ;
IDN 60 i
OP_PRIDRUZI 60 =
IDN 60 i
PLUS 60 +
BROJ 60 2
TOCKAZAREZ 60 ;
D_VIT_ZAGRADA 61 }
KR_RETURN 63 return
TOCKAZAREZ 63 ;
D_VIT_ZAGRADA 65 }
KR_CHAR 67 char
IDN 67 proba3
L_ZAGRADA 67 (
KR_VOID 67 void
D_ZAGRADA 67 )
L_VIT_ZAGRADA 68 {
IDN 69 x
OP_PRIDRUZI 69 =
BROJ 69 4
TOCKAZAREZ 69 ;
KR_IF 70 if
L_ZAGRADA 70 (
BROJ 70 0
D_ZAGRADA 70 )
L_VIT_ZAGRADA 71 {
IDN 72 x
OP_PRIDRUZI 72 =
BROJ 72 6
TOCKAZAREZ 72 ;
KR_RETURN 73 return
ZNAK 73 'a'
TOCKAZAREZ 73 ;
D_VIT_ZAGRADA 74 }
KR_ELSE 74 else
L_VIT_ZAGRADA 74 {
KR_RETURN 75 return
L_ZAGRADA 75 (
KR_CHAR 75 char
D_ZAGRADA 75 )
BROJ 75 97
TOCKAZAREZ 75 ;
D_VIT_ZAGRADA 77 }
D_VIT_ZAGRADA 78 }
KR_CHAR 80 char
IDN 80 proba
L_ZAGRADA 80 (
KR_VOID 80 void
D_ZAGRADA 80 )
L_VIT_ZAGRADA 81 {
KR_RETURN 82 return
L_ZAGRADA 82 (
KR_CHAR 82 char
D_ZAGRADA 82 )
BROJ 82 97
TOCKAZAREZ 82 ;
D_VIT_ZAGRADA 83 }
KR_INT 86 int
IDN 86 proba2
L_ZAGRADA 86 (
KR_VOID 86 void
D_ZAGRADA 86 )
L_VIT_ZAGRADA 87 {
KR_RETURN 89 return
ZNAK 89 'a'
TOCKAZAREZ 89 ;
D_VIT_ZAGRADA 90 }
KR_INT 92 int
IDN 92 fact
L_ZAGRADA 92 (
KR_INT 92 int
IDN 92 n
D_ZAGRADA 92 )
L_VIT_ZAGRADA 93 {
IDN 94 foo
L_ZAGRADA 94 (
BROJ 94 1
ZAREZ 94 ,
BROJ 94 2
ZAREZ 94 ,
ZNAK 94 'h'
D_ZAGRADA 94 )
TOCKAZAREZ 94 ;
KR_IF 95 if
L_ZAGRADA 95 (
IDN 95 n
OP_GT 95 >
BROJ 95 0
D_ZAGRADA 95 )
KR_RETURN 96 return
IDN 96 n
OP_PUTA 96 *
IDN 96 fact
L_ZAGRADA 96 (
IDN 96 n
MINUS 96 -
BROJ 96 1
D_ZAGRADA 96 )
TOCKAZAREZ 96 ;
KR_ELSE 97 else
KR_RETURN 98 return
BROJ 98 1
TOCKAZAREZ 98 ;
D_VIT_ZAGRADA 99 }
KR_VOID 101 void
IDN 101 foo3
L_ZAGRADA 101 (
KR_VOID 101 void
D_ZAGRADA 101 )
L_VIT_ZAGRADA 102 {
KR_INT 103 int
IDN 103 i
OP_PRIDRUZI 103 =
BROJ 103 8
TOCKAZAREZ 103 ;
KR_RETURN 105 return
TOCKAZAREZ 105 ;
D_VIT_ZAGRADA 106 }
KR_VOID 108 void
IDN 108 f2
L_ZAGRADA 108 (
KR_INT 108 int
IDN 108 x
ZAREZ 108 ,
KR_INT 108 int
IDN 108 a
L_UGL_ZAGRADA 108 [
D_UGL_ZAGRADA 108 ]
D_ZAGRADA 108 )
L_VIT_ZAGRADA 108 {
IDN 109 x
OP_PRIDRUZI 109 =
IDN 109 x
PLUS 109 +
BROJ 109 1
TOCKAZAREZ 109 ;
IDN 110 a
L_UGL_ZAGRADA 110 [
BROJ 110 0
D_UGL_ZAGRADA 110 ]
OP_PRIDRUZI 110 =
IDN 110 a
L_UGL_ZAGRADA 110 [
BROJ 110 0
D_UGL_ZAGRADA 110 ]
PLUS 110 +
BROJ 110 1
TOCKAZAREZ 110 ;
D_VIT_ZAGRADA 111 }
KR_INT 122 int
IDN 122 main2
L_ZAGRADA 122 (
KR_VOID 122 void
D_ZAGRADA 122 )
L_VIT_ZAGRADA 122 {
KR_INT 123 int
IDN 123 x
OP_PRIDRUZI 123 =
BROJ 123 2147483647
ZAREZ 123 ,
IDN 123 y
TOCKAZAREZ 123 ;
L_ZAGRADA 125 (
KR_INT 125 int
D_ZAGRADA 125 )
ZNAK 125 'a'
TOCKAZAREZ 125 ;
L_ZAGRADA 126 (
KR_CONST 126 const
KR_CHAR 126 char
D_ZAGRADA 126 )
IDN 126 x
TOCKAZAREZ 126 ;
L_ZAGRADA 127 (
KR_CONST 127 const
KR_INT 127 int
D_ZAGRADA 127 )
ZNAK 127 'a'
TOCKAZAREZ 127 ;
L_ZAGRADA 128 (
KR_CHAR 128 char
D_ZAGRADA 128 )
L_ZAGRADA 128 (
L_ZAGRADA 128 (
KR_CONST 128 const
KR_INT 128 int
D_ZAGRADA 128 )
BROJ 128 300
PLUS 128 +
L_ZAGRADA 128 (
KR_INT 128 int
D_ZAGRADA 128 )
ZNAK 128 'a'
D_ZAGRADA 128 )
TOCKAZAREZ 128 ;
L_ZAGRADA 129 (
KR_INT 129 int
D_ZAGRADA 129 )
L_ZAGRADA 129 (
KR_CHAR 129 char
D_ZAGRADA 129 )
L_ZAGRADA 129 (
KR_CONST 129 const
KR_INT 129 int
D_ZAGRADA 129 )
L_ZAGRADA 129 (
KR_CONST 129 const
KR_CHAR 129 char
D_ZAGRADA 129 )
L_ZAGRADA 129 (
IDN 129 x
PLUS 129 +
IDN 129 y
D_ZAGRADA 129 )
TOCKAZAREZ 129 ;
KR_RETURN 131 return
BROJ 131 0
TOCKAZAREZ 131 ;
D_VIT_ZAGRADA 132 }
KR_VOID 132 void
IDN 132 foo
L_ZAGRADA 132 (
KR_INT 132 int
IDN 132 x
ZAREZ 132 ,
KR_INT 132 int
IDN 132 c
ZAREZ 132 ,
KR_CHAR 132 char
IDN 132 h
D_ZAGRADA 132 )
TOCKAZAREZ 132 ;
KR_INT 134 int
IDN 134 f
L_ZAGRADA 134 (
KR_VOID 134 void
D_ZAGRADA 134 )
L_VIT_ZAGRADA 135 {
KR_RETURN 136 return
BROJ 136 0
TOCKAZAREZ 136 ;
D_VIT_ZAGRADA 137 }
KR_INT 139 int
IDN 139 x
OP_PRIDRUZI 139 =
BROJ 139 3
TOCKAZAREZ 139 ;
KR_INT 143 int
IDN 143 main
L_ZAGRADA 143 (
KR_VOID 143 void
D_ZAGRADA 143 )
L_VIT_ZAGRADA 144 {
KR_INT 145 int
IDN 145 a
OP_PRIDRUZI 145 =
BROJ 145 5
TOCKAZAREZ 145 ;
KR_CONST 146 const
KR_CHAR 146 char
IDN 146 c
OP_PRIDRUZI 146 =
ZNAK 146 'i'
TOCKAZAREZ 146 ;
KR_INT 147 int
IDN 147 niz
L_UGL_ZAGRADA 147 [
BROJ 147 3
D_UGL_ZAGRADA 147 ]
TOCKAZAREZ 147 ;
KR_VOID 148 void
IDN 148 foo
L_ZAGRADA 148 (
KR_INT 148 int
IDN 148 x
ZAREZ 148 ,
KR_INT 148 int
IDN 148 c
ZAREZ 148 ,
KR_CHAR 148 char
IDN 148 h
D_ZAGRADA 148 )
TOCKAZAREZ 148 ;
KR_INT 149 int
IDN 149 x
OP_PRIDRUZI 149 =
BROJ 149 5
TOCKAZAREZ 149 ;
KR_INT 150 int
IDN 150 y
OP_PRIDRUZI 150 =
IDN 150 x
PLUS 150 +
BROJ 150 1
TOCKAZAREZ 150 ;
IDN 151 a
OP_PRIDRUZI 151 =
IDN 151 a
PLUS 151 +
BROJ 151 3
TOCKAZAREZ 151 ;
KR_IF 153 if
L_ZAGRADA 153 (
IDN 153 a
OP_GT 153 >
BROJ 153 2
D_ZAGRADA 153 )
L_VIT_ZAGRADA 154 {
KR_INT 155 int
IDN 155 a
TOCKAZAREZ 155 ;
KR_INT 156 int
IDN 156 b
TOCKAZAREZ 156 ;
IDN 157 a
OP_PRIDRUZI 157 =
IDN 157 b
TOCKAZAREZ 157 ;
IDN 158 x
OP_PRIDRUZI 158 =
BROJ 158 4
TOCKAZAREZ 158 ;
D_VIT_ZAGRADA 159 }
KR_RETURN 160 return
IDN 160 f
L_ZAGRADA 160 (
D_ZAGRADA 160 )
TOCKAZAREZ 160 ;
D_VIT_ZAGRADA 161 }
KR_INT 163 int
IDN 163 fact
L_ZAGRADA 163 (
KR_INT 163 int
IDN 163 bzvz
D_ZAGRADA 163 )
TOCKAZAREZ 163 ;
KR_VOID 165 void
IDN 165 foo
L_ZAGRADA 165 (
KR_INT 165 int
IDN 165 x
ZAREZ 165 ,
KR_INT 165 int
IDN 165 c
ZAREZ 165 ,
KR_CHAR 165 char
IDN 165 h
D_ZAGRADA 165 )
L_VIT_ZAGRADA 166 {
KR_INT 167 int
IDN 167 i
OP_PRIDRUZI 167 =
IDN 167 fact
L_ZAGRADA 167 (
IDN 167 x
D_ZAGRADA 167 )
TOCKAZAREZ 167 ;
KR_INT 168 int
IDN 168 a
OP_PRIDRUZI 168 =
IDN 168 a
PLUS 168 +
BROJ 168 1
TOCKAZAREZ 168 ;
KR_VOID 169 void
IDN 169 foo3
L_ZAGRADA 169 (
KR_VOID 169 void
D_ZAGRADA 169 )
TOCKAZAREZ 169 ;
KR_INT 170 int
IDN 170 niz1
L_UGL_ZAGRADA 170 [
BROJ 170 5
D_UGL_ZAGRADA 170 ]
OP_PRIDRUZI 170 =
L_VIT_ZAGRADA 170 {
BROJ 170 1
ZAREZ 170 ,
BROJ 170 2
ZAREZ 170 ,
BROJ 170 3
D_VIT_ZAGRADA 170 }
TOCKAZAREZ 170 ;
KR_FOR 173 for
L_ZAGRADA 173 (
IDN 173 i
OP_PRIDRUZI 173 =
BROJ 173 0
TOCKAZAREZ 173 ;
IDN 173 i
OP_LT 173 <
BROJ 173 5
TOCKAZAREZ 173 ;
IDN 173 i
OP_INC 173 ++
D_ZAGRADA 173 )
KR_BREAK 174 break
TOCKAZAREZ 174 ;
KR_WHILE 175 while
L_ZAGRADA 175 (
BROJ 175 1
D_ZAGRADA 175 )
L_VIT_ZAGRADA 176 {
KR_BREAK 177 break
TOCKAZAREZ 177 ;
IDN 178 i
OP_PRIDRUZI 178 =
IDN 178 i
PLUS 178 +
BROJ 178 2
TOCKAZAREZ 178 ;
D_VIT_ZAGRADA 179 }
KR_RETURN 181 return
TOCKAZAREZ 181 ;
D_VIT_ZAGRADA 183 }
KR_CHAR 185 char
IDN 185 proba3
L_ZAGRADA 185 (
KR_VOID 185 void
D_ZAGRADA 185 )
L_VIT_ZAGRADA 186 {
IDN 187 x
OP_PRIDRUZI 187 =
BROJ 187 4
TOCKAZAREZ 187 ;
KR_IF 188 if
L_ZAGRADA 188 (
BROJ 188 0
D_ZAGRADA 188 )
L_VIT_ZAGRADA 189 {
IDN 190 x
OP_PRIDRUZI 190 =
BROJ 190 6
TOCKAZAREZ 190 ;
KR_RETURN 191 return
ZNAK 191 'a'
TOCKAZAREZ 191 ;
D_VIT_ZAGRADA 192 }
KR_ELSE 192 else
L_VIT_ZAGRADA 192 {
KR_RETURN 193 return
L_ZAGRADA 193 (
KR_CHAR 193 char
D_ZAGRADA 193 )
BROJ 193 97
TOCKAZAREZ 193 ;
D_VIT_ZAGRADA 195 }
D_VIT_ZAGRADA 196 }
KR_CHAR 198 char
IDN 198 proba
L_ZAGRADA 198 (
KR_VOID 198 void
D_ZAGRADA 198 )
L_VIT_ZAGRADA 199 {
KR_RETURN 200 return
L_ZAGRADA 200 (
KR_CHAR 200 char
D_ZAGRADA 200 )
BROJ 200 97
TOCKAZAREZ 200 ;
D_VIT_ZAGRADA 201 }
KR_INT 204 int
IDN 204 proba2
L_ZAGRADA 204 (
KR_VOID 204 void
D_ZAGRADA 204 )
L_VIT_ZAGRADA 205 {
KR_RETURN 207 return
ZNAK 207 'a'
TOCKAZAREZ 207 ;
D_VIT_ZAGRADA 208 }
KR_INT 210 int
IDN 210 fact
L_ZAGRADA 210 (
KR_INT 210 int
IDN 210 n
D_ZAGRADA 210 )
L_VIT_ZAGRADA 211 {
IDN 212 foo
L_ZAGRADA 212 (
BROJ 212 1
ZAREZ 212 ,
BROJ 212 2
ZAREZ 212 ,
ZNAK 212 'h'
D_ZAGRADA 212 )
TOCKAZAREZ 212 ;
KR_IF 213 if
L_ZAGRADA 213 (
IDN 213 n
OP_GT 213 >
BROJ 213 0
D_ZAGRADA 213 )
KR_RETURN 214 return
IDN 214 n
OP_PUTA 214 *
IDN 214 fact
L_ZAGRADA 214 (
IDN 214 n
MINUS 214 -
BROJ 214 1
D_ZAGRADA 214 )
TOCKAZAREZ 214 ;
KR_ELSE 215 else
KR_RETURN 216 return
BROJ 216 1
TOCKAZAREZ 216 ;
D_VIT_ZAGRADA 217 }
KR_VOID 219 void
IDN 219 foo3
L_ZAGRADA 219 (
KR_VOID 219 void
D_ZAGRADA 219 )
L_VIT_ZAGRADA 220 {
KR_INT 221 int
IDN 221 i
OP_PRIDRUZI 221 =
BROJ 221 8
TOCKAZAREZ 221 ;
KR_RETURN 223 return
TOCKAZAREZ 223 ;
D_VIT_ZAGRADA 224 }
KR_VOID 226 void
IDN 226 f2
L_ZAGRADA 226 (
KR_INT 226 int
IDN 226 x
ZAREZ 226 ,
KR_INT 226 int
IDN 226 a
L_UGL_ZAGRADA 226 [
D_UGL_ZAGRADA 226 ]
D_ZAGRADA 226 )
L_VIT_ZAGRADA 226 {
IDN 227 x
OP_PRIDRUZI 227 =
IDN 227 x
PLUS 227 +
BROJ 227 1
TOCKAZAREZ 227 ;
IDN 228 a
L_UGL_ZAGRADA 228 [
BROJ 228 0
D_UGL_ZAGRADA 228 ]
OP_PRIDRUZI 228 =
IDN 228 a
L_UGL_ZAGRADA 228 [
BROJ 228 0
D_UGL_ZAGRADA 228 ]
PLUS 228 +
BROJ 228 1
TOCKAZAREZ 228 ;
D_VIT_ZAGRADA 229 }
KR_INT 240 int
IDN 240 main2
L_ZAGRADA 240 (
KR_VOID 240 void
D_ZAGRADA 240 )
L_VIT_ZAGRADA 240 {
KR_INT 241 int
IDN 241 x
OP_PRIDRUZI 241 =
BROJ 241 2147483647
ZAREZ 241 ,
IDN 241 y
TOCKAZAREZ 241 ;
L_ZAGRADA 243 (
KR_INT 243 int
D_ZAGRADA 243 )
ZNAK 243 'a'
TOCKAZAREZ 243 ;
L_ZAGRADA 244 (
KR_CONST 244 const
KR_CHAR 244 char
D_ZAGRADA 244 )
IDN 244 x
TOCKAZAREZ 244 ;
L_ZAGRADA 245 (
KR_CONST 245 const
KR_INT 245 int
D_ZAGRADA 245 )
ZNAK 245 'a'
TOCKAZAREZ 245 ;
L_ZAGRADA 246 (
KR_CHAR 246 char
D_ZAGRADA 246 )
L_ZAGRADA 246 (
L_ZAGRADA 246 (
KR_CONST 246 const
KR_INT 246 int
D_ZAGRADA 246 )
BROJ 246 300
PLUS 246 +
L_ZAGRADA 246 (
KR_INT 246 int
D_ZAGRADA 246 )
ZNAK 246 'a'
D_ZAGRADA 246 )
TOCKAZAREZ 246 ;
L_ZAGRADA 247 (
KR_INT 247 int
D_ZAGRADA 247 )
L_ZAGRADA 247 (
KR_CHAR 247 char
D_ZAGRADA 247 )
L_ZAGRADA 247 (
KR_CONST 247 const
KR_INT 247 int
D_ZAGRADA 247 )
L_ZAGRADA 247 (
KR_CONST 247 const
KR_CHAR 247 char
D_ZAGRADA 247 )
L_ZAGRADA 247 (
IDN 247 x
PLUS 247 +
IDN 247 y
D_ZAGRADA 247 )
TOCKAZAREZ 247 ;
KR_RETURN 249 return
BROJ 249 0
TOCKAZAREZ 249 ;
D_VIT_ZAGRADA 250 }
