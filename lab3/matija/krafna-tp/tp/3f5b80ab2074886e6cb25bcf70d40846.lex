KR_VOID 1 void
IDN 1 f
L_ZAGRADA 1 (
KR_INT 1 int
IDN 1 a
ZAREZ 1 ,
KR_CONST 1 const
KR_INT 1 int
IDN 1 b
ZAREZ 1 ,
KR_CHAR 1 char
IDN 1 c
L_UGL_ZAGRADA 1 [
D_UGL_ZAGRADA 1 ]
D_ZAGRADA 1 )
TOCKAZAREZ 1 ;
KR_INT 3 int
IDN 3 main
L_ZAGRADA 3 (
KR_VOID 3 void
D_ZAGRADA 3 )
L_VIT_ZAGRADA 3 {
KR_CHAR 4 char
IDN 4 a
L_UGL_ZAGRADA 4 [
BROJ 4 10
D_UGL_ZAGRADA 4 ]
TOCKAZAREZ 4 ;
IDN 5 f
L_ZAGRADA 5 (
BROJ 5 1
ZAREZ 5 ,
BROJ 5 2
ZAREZ 5 ,
IDN 5 a
D_ZAGRADA 5 )
TOCKAZAREZ 5 ;
KR_RETURN 6 return
BROJ 6 0
TOCKAZAREZ 6 ;
D_VIT_ZAGRADA 7 }
KR_VOID 9 void
IDN 9 f
L_ZAGRADA 9 (
KR_INT 9 int
IDN 9 d
ZAREZ 9 ,
KR_CONST 9 const
KR_INT 9 int
IDN 9 b
ZAREZ 9 ,
KR_CHAR 9 char
IDN 9 c
L_UGL_ZAGRADA 9 [
D_UGL_ZAGRADA 9 ]
D_ZAGRADA 9 )
L_VIT_ZAGRADA 9 {
KR_INT 10 int
IDN 10 a
OP_PRIDRUZI 10 =
IDN 10 b
PLUS 10 +
BROJ 10 1
ZAREZ 10 ,
IDN 10 x
L_UGL_ZAGRADA 10 [
BROJ 10 5
D_UGL_ZAGRADA 10 ]
ZAREZ 10 ,
IDN 10 t
TOCKAZAREZ 10 ;
KR_CHAR 11 char
IDN 11 n
L_UGL_ZAGRADA 11 [
BROJ 11 6
D_UGL_ZAGRADA 11 ]
TOCKAZAREZ 11 ;
KR_INT 12 int
IDN 12 y
OP_PRIDRUZI 12 =
IDN 12 y
TOCKAZAREZ 12 ;
KR_INT 13 int
IDN 13 m
MINUS 13 -
BROJ 13 1
D_UGL_ZAGRADA 13 ]
TOCKAZAREZ 13 ;
KR_INT 14 int
IDN 14 e
L_UGL_ZAGRADA 14 [
BROJ 14 8
D_UGL_ZAGRADA 14 ]
OP_PRIDRUZI 14 =
L_VIT_ZAGRADA 14 {
ZNAK 14 'a'
ZAREZ 14 ,
BROJ 14 1
ZAREZ 14 ,
BROJ 14 2
ZAREZ 14 ,
BROJ 14 3
ZAREZ 14 ,
BROJ 14 4
ZAREZ 14 ,
BROJ 14 5
ZAREZ 14 ,
BROJ 14 6
ZAREZ 14 ,
BROJ 14 87
D_VIT_ZAGRADA 14 }
TOCKAZAREZ 14 ;
IDN 15 a
OP_PRIDRUZI 15 =
IDN 15 a
OP_EQ 15 ==
BROJ 15 5
OP_PUTA 15 *
BROJ 15 4
OP_LTE 15 <=
BROJ 15 3
OP_GT 15 >
BROJ 15 2
PLUS 15 +
BROJ 15 1
OP_PUTA 15 *
L_ZAGRADA 15 (
KR_CHAR 15 char
D_ZAGRADA 15 )
BROJ 15 4
TOCKAZAREZ 15 ;
KR_RETURN 16 return
TOCKAZAREZ 16 ;
D_VIT_ZAGRADA 17 }
