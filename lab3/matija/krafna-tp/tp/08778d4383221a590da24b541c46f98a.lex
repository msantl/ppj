KR_VOID 3 void
IDN 3 foo
L_ZAGRADA 3 (
KR_INT 3 int
IDN 3 x
ZAREZ 3 ,
KR_INT 3 int
IDN 3 c
ZAREZ 3 ,
KR_CHAR 3 char
IDN 3 h
D_ZAGRADA 3 )
TOCKAZAREZ 3 ;
KR_INT 5 int
IDN 5 f
L_ZAGRADA 5 (
KR_VOID 5 void
D_ZAGRADA 5 )
L_VIT_ZAGRADA 6 {
KR_RETURN 7 return
BROJ 7 0
TOCKAZAREZ 7 ;
D_VIT_ZAGRADA 8 }
KR_INT 10 int
IDN 10 x
OP_PRIDRUZI 10 =
BROJ 10 3
TOCKAZAREZ 10 ;
KR_INT 14 int
IDN 14 main
L_ZAGRADA 14 (
KR_VOID 14 void
D_ZAGRADA 14 )
L_VIT_ZAGRADA 15 {
KR_INT 16 int
IDN 16 a
OP_PRIDRUZI 16 =
BROJ 16 5
TOCKAZAREZ 16 ;
KR_CONST 17 const
KR_CHAR 17 char
IDN 17 c
OP_PRIDRUZI 17 =
ZNAK 17 'i'
TOCKAZAREZ 17 ;
KR_INT 18 int
IDN 18 niz
L_UGL_ZAGRADA 18 [
BROJ 18 3
D_UGL_ZAGRADA 18 ]
TOCKAZAREZ 18 ;
KR_VOID 19 void
IDN 19 foo
L_ZAGRADA 19 (
KR_INT 19 int
IDN 19 x
ZAREZ 19 ,
KR_INT 19 int
IDN 19 c
ZAREZ 19 ,
KR_CHAR 19 char
IDN 19 h
D_ZAGRADA 19 )
TOCKAZAREZ 19 ;
KR_INT 20 int
IDN 20 x
OP_PRIDRUZI 20 =
BROJ 20 5
TOCKAZAREZ 20 ;
KR_INT 21 int
IDN 21 y
OP_PRIDRUZI 21 =
IDN 21 x
PLUS 21 +
BROJ 21 1
TOCKAZAREZ 21 ;
IDN 22 a
OP_PRIDRUZI 22 =
IDN 22 a
PLUS 22 +
BROJ 22 3
TOCKAZAREZ 22 ;
KR_IF 24 if
L_ZAGRADA 24 (
IDN 24 a
OP_GT 24 >
BROJ 24 2
D_ZAGRADA 24 )
L_VIT_ZAGRADA 25 {
KR_INT 26 int
IDN 26 a
TOCKAZAREZ 26 ;
KR_INT 27 int
IDN 27 b
TOCKAZAREZ 27 ;
IDN 28 a
OP_PRIDRUZI 28 =
IDN 28 b
TOCKAZAREZ 28 ;
IDN 29 x
OP_PRIDRUZI 29 =
BROJ 29 4
TOCKAZAREZ 29 ;
D_VIT_ZAGRADA 30 }
KR_RETURN 31 return
IDN 31 f
L_ZAGRADA 31 (
D_ZAGRADA 31 )
TOCKAZAREZ 31 ;
D_VIT_ZAGRADA 32 }
KR_INT 34 int
IDN 34 fact
L_ZAGRADA 34 (
KR_INT 34 int
IDN 34 bzvz
D_ZAGRADA 34 )
TOCKAZAREZ 34 ;
KR_VOID 36 void
IDN 36 foo
L_ZAGRADA 36 (
KR_INT 36 int
IDN 36 x
ZAREZ 36 ,
KR_INT 36 int
IDN 36 c
ZAREZ 36 ,
KR_CHAR 36 char
IDN 36 h
D_ZAGRADA 36 )
L_VIT_ZAGRADA 37 {
KR_INT 38 int
IDN 38 i
OP_PRIDRUZI 38 =
IDN 38 fact
L_ZAGRADA 38 (
IDN 38 x
D_ZAGRADA 38 )
TOCKAZAREZ 38 ;
KR_INT 39 int
IDN 39 a
OP_PRIDRUZI 39 =
IDN 39 a
PLUS 39 +
BROJ 39 1
TOCKAZAREZ 39 ;
KR_VOID 40 void
IDN 40 foo3
L_ZAGRADA 40 (
KR_VOID 40 void
D_ZAGRADA 40 )
TOCKAZAREZ 40 ;
KR_INT 41 int
IDN 41 niz1
L_UGL_ZAGRADA 41 [
BROJ 41 5
D_UGL_ZAGRADA 41 ]
OP_PRIDRUZI 41 =
L_VIT_ZAGRADA 41 {
BROJ 41 1
ZAREZ 41 ,
BROJ 41 2
ZAREZ 41 ,
BROJ 41 3
D_VIT_ZAGRADA 41 }
TOCKAZAREZ 41 ;
KR_FOR 43 for
L_ZAGRADA 43 (
IDN 43 i
OP_PRIDRUZI 43 =
BROJ 43 0
TOCKAZAREZ 43 ;
IDN 43 i
OP_LT 43 <
BROJ 43 5
TOCKAZAREZ 43 ;
IDN 43 i
OP_INC 43 ++
D_ZAGRADA 43 )
KR_BREAK 44 break
TOCKAZAREZ 44 ;
KR_WHILE 45 while
L_ZAGRADA 45 (
BROJ 45 1
D_ZAGRADA 45 )
L_VIT_ZAGRADA 46 {
KR_BREAK 47 break
TOCKAZAREZ 47 ;
IDN 48 i
OP_PRIDRUZI 48 =
IDN 48 i
PLUS 48 +
BROJ 48 2
TOCKAZAREZ 48 ;
D_VIT_ZAGRADA 49 }
KR_RETURN 51 return
TOCKAZAREZ 51 ;
D_VIT_ZAGRADA 53 }
KR_CHAR 55 char
IDN 55 proba3
L_ZAGRADA 55 (
KR_VOID 55 void
D_ZAGRADA 55 )
L_VIT_ZAGRADA 56 {
IDN 57 x
OP_PRIDRUZI 57 =
BROJ 57 4
TOCKAZAREZ 57 ;
KR_IF 58 if
L_ZAGRADA 58 (
BROJ 58 0
D_ZAGRADA 58 )
L_VIT_ZAGRADA 59 {
IDN 60 x
OP_PRIDRUZI 60 =
BROJ 60 6
TOCKAZAREZ 60 ;
KR_RETURN 61 return
ZNAK 61 'a'
TOCKAZAREZ 61 ;
D_VIT_ZAGRADA 62 }
KR_ELSE 62 else
L_VIT_ZAGRADA 62 {
KR_RETURN 63 return
L_ZAGRADA 63 (
KR_CHAR 63 char
D_ZAGRADA 63 )
BROJ 63 97
TOCKAZAREZ 63 ;
D_VIT_ZAGRADA 65 }
D_VIT_ZAGRADA 66 }
KR_CHAR 68 char
IDN 68 proba
L_ZAGRADA 68 (
KR_VOID 68 void
D_ZAGRADA 68 )
L_VIT_ZAGRADA 69 {
KR_RETURN 70 return
L_ZAGRADA 70 (
KR_CHAR 70 char
D_ZAGRADA 70 )
BROJ 70 97
TOCKAZAREZ 70 ;
D_VIT_ZAGRADA 71 }
KR_INT 74 int
IDN 74 proba2
L_ZAGRADA 74 (
KR_VOID 74 void
D_ZAGRADA 74 )
L_VIT_ZAGRADA 75 {
KR_RETURN 77 return
ZNAK 77 'a'
TOCKAZAREZ 77 ;
D_VIT_ZAGRADA 78 }
KR_INT 80 int
IDN 80 fact
L_ZAGRADA 80 (
KR_INT 80 int
IDN 80 n
D_ZAGRADA 80 )
L_VIT_ZAGRADA 81 {
IDN 82 foo
L_ZAGRADA 82 (
BROJ 82 1
ZAREZ 82 ,
BROJ 82 2
ZAREZ 82 ,
ZNAK 82 'h'
D_ZAGRADA 82 )
TOCKAZAREZ 82 ;
KR_IF 83 if
L_ZAGRADA 83 (
IDN 83 n
OP_GT 83 >
BROJ 83 0
D_ZAGRADA 83 )
KR_RETURN 84 return
IDN 84 n
OP_PUTA 84 *
IDN 84 fact
L_ZAGRADA 84 (
IDN 84 n
MINUS 84 -
BROJ 84 1
D_ZAGRADA 84 )
TOCKAZAREZ 84 ;
KR_ELSE 85 else
KR_RETURN 86 return
BROJ 86 1
TOCKAZAREZ 86 ;
D_VIT_ZAGRADA 87 }
KR_VOID 89 void
IDN 89 foo3
L_ZAGRADA 89 (
KR_VOID 89 void
D_ZAGRADA 89 )
L_VIT_ZAGRADA 90 {
KR_INT 91 int
IDN 91 i
OP_PRIDRUZI 91 =
BROJ 91 8
TOCKAZAREZ 91 ;
KR_RETURN 93 return
TOCKAZAREZ 93 ;
D_VIT_ZAGRADA 94 }
KR_VOID 96 void
IDN 96 f2
L_ZAGRADA 96 (
KR_INT 96 int
IDN 96 x
ZAREZ 96 ,
KR_INT 96 int
IDN 96 a
L_UGL_ZAGRADA 96 [
D_UGL_ZAGRADA 96 ]
D_ZAGRADA 96 )
L_VIT_ZAGRADA 96 {
IDN 97 x
OP_PRIDRUZI 97 =
IDN 97 x
PLUS 97 +
BROJ 97 1
TOCKAZAREZ 97 ;
D_VIT_ZAGRADA 99 }
KR_CHAR 108 char
IDN 108 f2
TOCKAZAREZ 108 ;
KR_INT 110 int
IDN 110 main2
L_ZAGRADA 110 (
KR_VOID 110 void
D_ZAGRADA 110 )
L_VIT_ZAGRADA 110 {
KR_INT 111 int
IDN 111 x
OP_PRIDRUZI 111 =
BROJ 111 2147483647
ZAREZ 111 ,
IDN 111 y
TOCKAZAREZ 111 ;
L_ZAGRADA 113 (
KR_INT 113 int
D_ZAGRADA 113 )
ZNAK 113 'a'
TOCKAZAREZ 113 ;
L_ZAGRADA 114 (
KR_CONST 114 const
KR_CHAR 114 char
D_ZAGRADA 114 )
IDN 114 x
TOCKAZAREZ 114 ;
L_ZAGRADA 115 (
KR_CONST 115 const
KR_INT 115 int
D_ZAGRADA 115 )
ZNAK 115 'a'
TOCKAZAREZ 115 ;
L_ZAGRADA 116 (
KR_CHAR 116 char
D_ZAGRADA 116 )
L_ZAGRADA 116 (
L_ZAGRADA 116 (
KR_CONST 116 const
KR_INT 116 int
D_ZAGRADA 116 )
BROJ 116 300
PLUS 116 +
L_ZAGRADA 116 (
KR_INT 116 int
D_ZAGRADA 116 )
ZNAK 116 'a'
D_ZAGRADA 116 )
TOCKAZAREZ 116 ;
L_ZAGRADA 117 (
KR_INT 117 int
D_ZAGRADA 117 )
L_ZAGRADA 117 (
KR_CHAR 117 char
D_ZAGRADA 117 )
L_ZAGRADA 117 (
KR_CONST 117 const
KR_INT 117 int
D_ZAGRADA 117 )
L_ZAGRADA 117 (
KR_CONST 117 const
KR_CHAR 117 char
D_ZAGRADA 117 )
L_ZAGRADA 117 (
IDN 117 x
PLUS 117 +
IDN 117 y
D_ZAGRADA 117 )
TOCKAZAREZ 117 ;
KR_RETURN 119 return
BROJ 119 0
TOCKAZAREZ 119 ;
D_VIT_ZAGRADA 120 }
