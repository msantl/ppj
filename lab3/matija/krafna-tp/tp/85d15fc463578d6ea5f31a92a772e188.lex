KR_INT 1 int
IDN 1 main
L_ZAGRADA 1 (
KR_VOID 1 void
D_ZAGRADA 1 )
L_VIT_ZAGRADA 2 {
KR_INT 3 int
IDN 3 a
OP_PRIDRUZI 3 =
BROJ 3 5
TOCKAZAREZ 3 ;
KR_CONST 4 const
KR_CHAR 4 char
IDN 4 c
OP_PRIDRUZI 4 =
ZNAK 4 'i'
TOCKAZAREZ 4 ;
KR_INT 5 int
IDN 5 niz
L_UGL_ZAGRADA 5 [
BROJ 5 3
D_UGL_ZAGRADA 5 ]
TOCKAZAREZ 5 ;
KR_VOID 6 void
IDN 6 foo
L_ZAGRADA 6 (
KR_INT 6 int
IDN 6 x
ZAREZ 6 ,
KR_INT 6 int
IDN 6 c
ZAREZ 6 ,
KR_CHAR 6 char
IDN 6 h
D_ZAGRADA 6 )
TOCKAZAREZ 6 ;
KR_INT 7 int
IDN 7 x
OP_PRIDRUZI 7 =
BROJ 7 5
TOCKAZAREZ 7 ;
KR_INT 8 int
IDN 8 y
OP_PRIDRUZI 8 =
IDN 8 x
PLUS 8 +
BROJ 8 1
TOCKAZAREZ 8 ;
IDN 9 a
OP_PRIDRUZI 9 =
IDN 9 a
PLUS 9 +
BROJ 9 3
TOCKAZAREZ 9 ;
KR_IF 11 if
L_ZAGRADA 11 (
IDN 11 a
OP_GT 11 >
BROJ 11 2
D_ZAGRADA 11 )
L_VIT_ZAGRADA 12 {
KR_INT 13 int
IDN 13 a
TOCKAZAREZ 13 ;
KR_INT 14 int
IDN 14 b
TOCKAZAREZ 14 ;
IDN 15 a
OP_PRIDRUZI 15 =
IDN 15 b
TOCKAZAREZ 15 ;
IDN 16 x
OP_PRIDRUZI 16 =
BROJ 16 4
TOCKAZAREZ 16 ;
D_VIT_ZAGRADA 17 }
KR_RETURN 18 return
IDN 18 f
L_ZAGRADA 18 (
D_ZAGRADA 18 )
TOCKAZAREZ 18 ;
D_VIT_ZAGRADA 19 }
