KR_INT 15 int
IDN 15 printf
L_ZAGRADA 15 (
KR_CONST 15 const
KR_CHAR 15 char
IDN 15 format
L_UGL_ZAGRADA 15 [
D_UGL_ZAGRADA 15 ]
D_ZAGRADA 15 )
L_VIT_ZAGRADA 15 {
KR_INT 17 int
IDN 17 a
ZAREZ 17 ,
IDN 17 b
ZAREZ 17 ,
IDN 17 c
TOCKAZAREZ 17 ;
KR_RETURN 18 return
BROJ 18 0
TOCKAZAREZ 18 ;
L_ZAGRADA 19 (
KR_CONST 19 const
KR_INT 19 int
D_ZAGRADA 19 )
IDN 19 a
TOCKAZAREZ 19 ;
L_VIT_ZAGRADA 20 {
IDN 21 breakl
KR_WHILE 22 while
L_ZAGRADA 22 (
IDN 22 a
OP_PRIDRUZI 22 =
BROJ 22 5
ZAREZ 22 ,
IDN 22 a
OP_PRIDRUZI 22 =
IDN 22 a
OP_PRIDRUZI 22 =
BROJ 22 4
OP_I 22 &&
BROJ 22 3
OP_ILI 22 ||
BROJ 22 5
OP_BIN_ILI 22 |
IDN 22 a
OP_BIN_XILI 22 ^
IDN 22 a
OP_BIN_I 22 &
IDN 22 a
OP_EQ 22 ==
ZNAK 22 'a'
PLUS 22 +
BROJ 22 5
OP_MOD 22 %
L_ZAGRADA 22 (
KR_VOID 22 void
D_ZAGRADA 22 )
BROJ 22 2
OP_DIJELI 22 /
L_ZAGRADA 22 (
KR_CONST 22 const
KR_CHAR 22 char
D_ZAGRADA 22 )
BROJ 22 4
D_ZAGRADA 22 )
IDN 22 a
TOCKAZAREZ 22 ;
D_VIT_ZAGRADA 23 }
D_VIT_ZAGRADA 24 }
KR_INT 27 int
IDN 27 main
L_ZAGRADA 27 (
KR_VOID 27 void
D_ZAGRADA 27 )
L_VIT_ZAGRADA 27 {
KR_RETURN 28 return
IDN 28 printf
L_ZAGRADA 28 (
NIZ_ZNAKOVA 28 "hello world!\n"
D_ZAGRADA 28 )
TOCKAZAREZ 28 ;
D_VIT_ZAGRADA 29 }
